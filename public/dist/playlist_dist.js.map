{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*","webpack:///webpack/bootstrap c47f1460ebbdfc9b7a88?a53f*","webpack:///./public/playlist.js","webpack:///./public/src/Client.js?7494*","webpack:///./public/src/Factory.js?1b93*","webpack:///./public/src/handlers/ArtistHandler.js?bcca*","webpack:///./public/src/helpers/Artist.js?c9e2*","webpack:///./public/src/entities/ArtistEntity.js?5c46*","webpack:///./public/src/handlers/AlbumHandler.js?0972*","webpack:///./public/src/helpers/Album.js?5155*","webpack:///./public/src/entities/AlbumEntity.js?00ff*","webpack:///./public/src/handlers/TrackHandler.js?d286*","webpack:///./public/src/helpers/Track.js?f5f6*","webpack:///./public/src/entities/TrackEntity.js?9397*","webpack:///./public/src/handlers/PlaylistHandler.js?477f*","webpack:///./public/src/helpers/Playlist.js?a96e*","webpack:///./public/src/entities/PlaylistEntity.js?647d*","webpack:///./public/src/handlers/UserHandler.js?f137*","webpack:///./public/src/helpers/User.js?e053*","webpack:///./public/src/entities/UserEntity.js?89eb*","webpack:///./public/src/handlers/CollectionHandler.js?feeb*","webpack:///./public/src/helpers/Collection.js?459d*","webpack:///./public/src/entities/CollectionEntity.js?4507*"],"names":["client","instance","settings","clientId","secretId","scopes","redirect_uri","playlistID","userID","session","sessionStorage","token","window","location","hash","split","console","log","user","trackHandler","popularity","acousticness","danceability","energy","tempo","trackIDs","playlists","then","playlist","_tracks","items","length","sumPopularity","count","i","track","id","push","audioFeatures","features","acousticnessSum","danceabilitySum","energySum","tempoSum","j","singleton","Symbol","singletonEnforcer","Client","enforcer","_token","_clientId","_secretId","_scopes","_redirect_uri","callback","url_login","encodeURIComponent","Promise","resolve","url","method","body","fetch","data","bind","obj","str","p","hasOwnProperty","join","endpoint","_headers","_url","_body","Authorization","indexOf","separator","toQueryString","JSON","stringify","checkStatus","response","status","error","Error","statusText","parseJSON","type","json","headers","Factory","_type","_items","_source","Object","keys","snapshot_id","Array","isArray","convert","request","href","ArtistHandler","name","query","ids","artists","item","Artist","albums","topTracks","relatedArtists","follow","unfollow","contains","ArtistEntity","_external_urls","external_urls","_followers","followers","_genres","genres","_href","_id","_images","images","_name","_popularity","_uri","uri","AlbumHandler","Album","AlbumEntity","_album_type","album_type","_artists","_available_markets","available_markets","_copyrights","copyrights","_external_ids","external_ids","_release_date","release_date","_release_date_precision","release_date_precision","tracks","TrackHandler","Track","x","Number","_duration_ms","seconds","minutes","TrackEntity","_album","album","_disc_number","disc_number","duration_ms","_explicit","explicit","_preview_url","preview_url","_track_number","track_number","_is_playable","_linked_from","PlaylistHandler","userId","playlistId","uris","is_public","public","Playlist","trackList","map","addTracks","owner","removeTracks","edit","PlaylistEntity","_collaborative","collaborative","_description","description","_owner","_public","_snapshot_id","UserHandler","User","top","UserEntity","_birthdate","birthdate","_country","country","_display_name","display_name","_email","email","_product","product","_display_email","CollectionHandler","handler","source","collectionHelper","collection","assign","next","previous","last","first","index","Collection","_next","_limit","limit","_offset","offset","_previous","_total","total"],"mappings":"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","file":"playlist_dist.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spotifySdk\"] = factory();\n\telse\n\t\troot[\"spotifySdk\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c47f1460ebbdfc9b7a88","'use strict'\n\nimport Client from './src/Client';\nimport PlaylistHandler from './src/handlers/PlaylistHandler';\nimport UserHandler from './src/handlers/UserHandler';\nimport TrackHandler from './src/handlers/TrackHandler';\n\nlet client = Client.instance;\n\nclient.settings = {\n    clientId: 'c7b3b4be06ec43cfa7ed4facfed7a6bc',\n    secretId: 'd8a020b39ffd43ddabd458ec712b7dad',\n    scopes: ['user-library-read user-top-read playlist-read-private playlist-read-collaborative'],\n    redirect_uri: 'https://spotiphy-0.firebaseapp.com/home.html'\n};\n\nlet playlistID;\nlet userID;\n\nfunction session() {\n\tif (sessionStorage.token) {\n\t\t\tclient.token = sessionStorage.token;\n\t}\n  \n  if (window.location.hash.split('&')[0].split('=')[1]) {\n    sessionStorage.playlistID = window.location.hash.split('&')[0].split('=')[1];\n    playlistID = sessionStorage.playlistID;\n  } else if (sessionStorage.playlistID) {\n    playlistID = sessionStorage.playlistID;\n  }\n\n  if (window.location.hash.split('&')[1].split('=')[1]) {\n    sessionStorage.userID = window.location.hash.split('&')[1].split('=')[1];\n    userID = sessionStorage.userID;\n  } else if (sessionStorage.userID) {\n    userID = sessionStorage.userID;\n  }\n}\n\nsession();\n\nconsole.log(playlistID);\nconsole.log(userID);\nconsole.log(client.token);\n\nvar user = new UserHandler();\nvar trackHandler = new TrackHandler();\nvar popularity = 0;\nvar acousticness = 0;\nvar danceability = 0;\nvar energy = 0;\nvar tempo = 0;\nvar trackIDs = [];\n\nuser.playlists(userID, playlistID).then((playlist) => {\n  console.log(playlist);\n  console.log(playlist._tracks.items.length);\n  var sumPopularity = 0;\n  var count = 0;\n  for (let i = 0; i < playlist._tracks.items.length; i++) {\n    console.log(playlist._tracks.items[i]);\n    console.log(playlist._tracks.items[i].track.popularity);\n    sumPopularity += playlist._tracks.items[i].track.popularity;\n    if (playlist._tracks.items[i].track.id) {\n      trackIDs.push(playlist._tracks.items[i].track.id);\n      count += 1;\n    }\n  }\n  popularity = sumPopularity / playlist._tracks.items.length;\n  console.log(trackIDs);\n  trackHandler.audioFeatures(trackIDs).then((features) => {\n    console.log(features);\n    var acousticnessSum = 0.0;\n    var danceabilitySum = 0.0;\n    var energySum = 0.0;\n    var tempoSum = 0.0;\n    for (let j = 0; j < features.length; j++) {\n      if (features[j]) {\n        acousticnessSum += features[j].acousticness;\n        danceabilitySum += features[j].danceability;\n        energySum += features[j].danceability;\n        tempoSum += features[j].tempo;\n      }\n    }\n    acousticness = acousticnessSum / count;\n    danceability = danceabilitySum / count;\n    energy = energySum / count;\n    tempo = tempoSum / count;\n    \n    console.log(\"Popularity: \" + popularity);\n    console.log(\"Acousticness: \" + acousticness);\n    console.log(\"Danceability: \" + danceability);\n    console.log(\"Energy: \" + energy);\n    console.log(\"Tempo: \" + tempo);\n  });\n});\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./public/playlist.js","import Factory from './Factory';\n\nlet singleton = Symbol();\nlet singletonEnforcer = Symbol();\n\n/**\n * Client is the responsible of comunicate with the API.\n */\nclass Client {\n\n  /**\n   * Constructor\n   *\n   * @param {Symbol} enforcer\n   */\n  constructor(enforcer) {\n    this._token = null;\n    this._clientId = null;\n    this._secretId = null;\n    this._scopes = null;\n    this._redirect_uri = null;\n\n    if (enforcer != singletonEnforcer) {\n      throw \"Cannot construct singleton\";\n    }\n  }\n\n  /**\n   * Get the current instance of Client\n   *\n   * @return {Object} instance\n   */\n  static get instance() {\n    if (!this[singleton]) {\n      this[singleton] = new Client(singletonEnforcer);\n    }\n    return this[singleton];\n  }\n\n  /**\n   * Set settings\n   *\n   * @param {Object} settings Settings\n   */\n  set settings(settings) {\n    this._token = settings.token;\n    this._clientId = settings.clientId;\n    this._secretId = settings.secretId;\n    this._scopes = settings.scopes;\n    this._redirect_uri = settings.redirect_uri;\n  }\n\n  /**\n   * Set token\n   *\n   * @param {String} data Token\n   */\n  set token(data) {\n    this._token = data;\n  }\n\n  /**\n   * Get the current token\n   *\n   * @return {String} Current token\n   */\n  get token() {\n    return this._token;\n  }\n\n  /**\n   * This method fires a new window that allow login\n   *\n   * @param  {Function} callback\n   * @return {Function|Promise}\n   */\n  login(callback) {\n    let url_login = 'https://accounts.spotify.com/en/authorize?response_type=token&client_id=' +\n      this._clientId + '&redirect_uri=' + encodeURIComponent(this._redirect_uri) +\n      ( this._scopes ? '&scope=' + encodeURIComponent(this._scopes) : '');\n    if (callback) {\n      return callback(url_login);\n    } else {\n      return new Promise((resolve) => {\n        resolve(url_login);\n      });\n    }\n  }\n\n  /**\n   * @param  {String} url Endpoint\n   * @param  {String} method Method GET, POST, PUT or DELETE\n   * @param  {Object} body Object to send in the body\n   * @return {Promise}\n   */\n  request(url, method, body) {\n    return this.fetch(url, method, body).then(function (data) {\n      return Factory(data);\n    }.bind(this));\n  }\n\n  /**\n   * Function that encode objects\n   *\n   * @param  {Object} obj Object to encode\n   * @return {String} A encode object\n   */\n  toQueryString(obj) {\n    let str = [];\n    for (let p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n\n  /**\n   * @param  {String} endpoint Endpoint\n   * @param  {String} method Method GET, POST, PUT or DELETE (default GET)\n   * @param  {Object} body Object to send in the body\n   * @return {Promise}\n   */\n  fetch(endpoint, method, body) {\n    let _headers = {'Accept': 'application/json'};\n    let _url;\n    let _body;\n\n    method = method || 'GET';\n\n    if (this._token) {\n      _headers.Authorization = `Bearer ${this._token}`;\n    }\n\n    if (endpoint.indexOf('https') > -1) {\n      _url = endpoint;\n    } else {\n      _url = `https://api.spotify.com/v1${endpoint}`;\n    }\n\n    if (method === 'GET') {\n      if (body) {\n        let separator = _url.indexOf('?') !== -1 ? \"&\" : \"?\";\n        _url = _url + separator + this.toQueryString(body);\n      }\n    } else {\n      _body = JSON.stringify(body);\n    }\n\n    let checkStatus = (response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    };\n\n    let parseJSON = (response) => {\n      if (response.statusText === 'No Content') {\n        return {type: 'undefineds'};\n      }\n      return response.json();\n    };\n\n    return fetch(_url, {\n      method : method,\n      headers: _headers,\n      body   : _body\n    }).then(checkStatus)\n      .then(parseJSON)\n  };\n}\n\n/**\n * Exports the Client class.\n */\nexport default Client;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/Client.js","import ArtistHandler from './handlers/ArtistHandler';\nimport AlbumHandler from './handlers/AlbumHandler';\nimport TrackHandler from './handlers/TrackHandler';\nimport PlaylistHandler from './handlers/PlaylistHandler';\nimport UserHandler from './handlers/UserHandler';\nimport CollectionHandler from './handlers/CollectionHandler';\nimport Client from './Client';\n\n/**\n * Factory is the responsible of create new entities or collections\n *\n * @param {Object} data Entity object or Api response\n */\nlet Factory = function(data) {\n  let _type;\n  let _items;\n  let _source;\n\n  if (data.error) {\n    return data.error;\n  } else if (Object.keys(data).length === 1 && data.snapshot_id) {\n    return data;\n  }\n\n    // a lot of magic happens here :D\n  if (data.type) {\n    _type = data.type;\n    _items = data;\n  } else if (typeof Object.keys(data)[0] === 'string' && !Array.isArray(data) && !data.items) {\n    _type = Object.keys(data)[0];\n    _items = data[_type].items || data[_type];\n    _source = data[_type];\n  } else if (Array.isArray(data)){\n      _type = data[0].type+'s';\n      _items = data;\n  } else if (Array.isArray(data.items) && data.items[0].type) {\n    _type = data.items[0].type+'s';\n    _items = data.items;\n    _source = data;\n  } else if (Array.isArray(data.items) && !data.items[0].type) {\n    _items = data.items;\n    _type = Object.keys(data.items[0])[3]+'s';\n    _source = data;\n  }\n\n  switch(_type) {\n    case 'track':\n      return new TrackHandler().convert(_items);\n      break;\n    case 'tracks':\n      return new CollectionHandler(_items, TrackHandler, _source);\n      break;\n    case 'playlist':\n      return new PlaylistHandler().convert(_items);\n      break;\n    case 'playlists':\n      return new CollectionHandler(_items, PlaylistHandler, _source);\n      break;\n    case 'artists':\n      return new CollectionHandler(_items, ArtistHandler, _source);\n      break;\n    case 'album':\n      return new AlbumHandler().convert(_items);\n      break;\n    case 'albums':\n      return new CollectionHandler(_items, AlbumHandler, _source);\n      break;\n    case 'user':\n      return new UserHandler().convert(_items);\n      break;\n    case 'undefineds':\n      return data;\n      break;\n    case 'audio_features':\n      return data;\n      break;\n    default:\n      return Client.instance.request(data.href);\n  }\n};\n\n/**\n * Exports a function that init a new Factory.\n */\nexport default function(data) {\n  return new Factory(data);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/Factory.js","'use strict';\n\nimport Artist from '../helpers/Artist';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more artists from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/artist-endpoints/\n */\nclass ArtistHandler {\n\n  /**\n   * Get a collection of artists that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the artist.\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} artistCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=artist&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a single/collection of artist/s identified by its unique/list of Spotify ID.\n   *\n   * @see https://developer.spotify.com/web-api/get-artist/\n   *\n   * @public\n   * @param {String|Array} ids Artist id/ids to retrive\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} Artist|artistCollection\n   */\n  get(ids, query) {\n    if (Array.isArray(ids)) {\n      return Client.instance.request(`/artists/?ids=${ids}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/artists/${ids}`, 'GET', query);\n    }\n  }\n\n  /**\n   * Get Spotify catalog information about an artist’s albums.\n   *\n   * @see https://developer.spotify.com/web-api/get-artists-albums/\n   *\n   * @public\n   * @param {String} id Artist id to retrive\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} albumsCollection\n   */\n  albums(id, query) {\n    return Client.instance.request(`/artists/${id}/albums`, 'GET', query);\n  }\n\n  /**\n   * Get Spotify catalog information about an artist’s top tracks by country.\n   *\n   * @see https://developer.spotify.com/web-api/get-artists-top-tracks/\n   *\n   * @public\n   * @param {String} id Artist id to retrive top tracks\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} tracksCollection\n   */\n  topTracks(id, query) {\n    return Client.instance.request(`/artists/${id}/top-tracks`, 'GET', query);\n  }\n\n  /**\n   * Get Spotify catalog information about artists similar to a given artist.\n   *\n   * @see https://developer.spotify.com/web-api/get-related-artists/\n   *\n   * @public\n   * @param {String} id Artist id to retrive related artists\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} albumsCollection\n   */\n  relatedArtists(id, query) {\n    return Client.instance.request(`/artists/${id}/related-artists`, 'GET', query);\n  }\n\n  /**\n   * Add the current user as a follower of one or more artists.\n   *\n   * @see https://developer.spotify.com/web-api/follow-artists-users/\n   *\n   * @public\n   * @param {Array} artists List of artists ids\n   * @return {Promise} JSON reponse\n   */\n  follow(artists) {\n    return Client.instance\n      .request(\n        `/me/following?type=artist`,\n        'PUT',\n        {ids: artists}\n      );\n  }\n\n   /**\n   * Remove the current user as a follower of one or more artists.\n   *\n   * @see https://developer.spotify.com/web-api/unfollow-artists-users/\n   *\n   * @public\n   * @param {Array} artists List of artists ids\n   * @return {Promise} JSON reponse\n   */\n  unfollow(artists) {\n    return Client.instance\n      .request(\n        `/me/following?type=artist`,\n        'DELETE',\n        {ids: artists}\n      );\n  }\n\n  /**\n   * Convert a valid object to a Artist entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @return {Object} Artist\n   */\n  convert(item) {\n    return new Artist(item);\n  }\n\n}\n\n/**\n * Exports the AlbumHandler class.\n */\nexport default ArtistHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/ArtistHandler.js","'use strict';\n\nimport ArtistEntity from '../entities/ArtistEntity';\nimport ArtistHandler from '../handlers/ArtistHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to ArtistEntity\n */\nclass Artist extends ArtistEntity {\n\n  /**\n   * @param {Object} data Artist object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Albums of a Artist.\n   *\n   * @public\n   * @return {Promise}\n   */\n  albums() {\n    return new ArtistHandler().albums(this.id);\n  }\n\n  /**\n   * Get an Artist top tracks\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  topTracks(query) {\n    return new ArtistHandler().topTracks(this.id, query);\n  }\n\n  /**\n   * Get related Artists of an Artist\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  relatedArtists(query) {\n    return new ArtistHandler().relatedArtists(this.id, query);\n  }\n\n  /**\n   * Follow an Artist\n   *\n   * @public\n   * @param {Object} query Optional query parameters.\n   * @return {Promise}\n   */\n  follow(query) {\n    return new ArtistHandler().follow([this.id], query);\n  }\n\n  /**\n   * Unfollow an Artist\n   *\n   * @public\n   * @param {Object} query Optional query parameters.\n   * @return {Promise}\n   */\n  unfollow(query) {\n    return new ArtistHandler().unfollow([this.id], query);\n  }\n\n  /**\n   * Verify if a user follow an Artist\n   *\n   * @public\n   * @param {Array} [ids] User ids list.\n   * @return {Promise}\n   */\n  contains(ids) {\n    return new ArtistHandler().contains(this.id, ids);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Artist;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Artist.js","'use strict';\n\n/**\n * Properties and methods of the Artist Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#album-object-full\n */\nclass ArtistEntity {\n\n    /**\n     * Constructor\n     * \n     * @param {Object} data Artist object\n     */\n    constructor(data = {}) {\n        this._external_urls = data.external_urls;\n        this._followers = data.followers;\n        this._genres = data.genres;\n        this._href = data.href;\n        this._id = data.id;\n        this._images = data.images;\n        this._name = data.name;\n        this._popularity = data.popularity;\n        this._type = data.type;\n        this._uri = data.uri;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set external_urls(data) {\n        this._external_urls = data;\n    }\n\n    /**\n     * @return {String} Artist external_urls\n     */\n    get external_urls() {\n        return this._external_urls;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set followers(data) {\n        this._followers = data;\n    }\n\n    /**\n     * @return {String} Artist followers\n     */\n    get followers() {\n        return this._followers;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set genres(data) {\n        this._genres = data;\n    }\n\n    /**\n     * @return {String} Artist genres\n     */\n    get genres() {\n        return this._genres;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set href(data) {\n        this._href = data;\n    }\n\n    /**\n     * @return {String} Artist href\n     */\n    get href() {\n        return this._href;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set id(data) {\n        this._id = data;\n    }\n\n    /**\n     * @return {String} Artist id\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set images(data) {\n        this._images = data;\n    }\n\n    /**\n     * @return {String} Artist images\n     */\n    get images() {\n        return this._images;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set name(data) {\n        this._name = data;\n    }\n\n    /**\n     * @return {String} Artist name\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set popularity(data) {\n        this._popularity = data;\n    }\n\n    /**\n     * @return {String} Artist popularity\n     */\n    get popularity() {\n        return this._popularity;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set type(data) {\n        this._type = data;\n    }\n\n    /**\n     * @return {String} Entity type\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set uri(data) {\n        this._uri = data;\n    }\n\n    /**\n     * @return {String} Artist uri\n     */\n    get uri() {\n        return this._uri;\n    }\n\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default ArtistEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/ArtistEntity.js","'use strict';\n\nimport Album from '../helpers/Album';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more albums from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/album-endpoints/\n */\nclass AlbumHandler {\n\n  /**\n   * Get a collection of albums that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the album.\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} albumsCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=album&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a single/collection of album/s identified by its unique/list of Spotify ID.\n   *\n   * @see https://developer.spotify.com/web-api/get-album/\n   *\n   * @public\n   * @param {String|Array} ids Album id/ids to retrive\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} Album|albumsCollection\n   */\n  get(ids, query) {\n    if (Array.isArray(ids)) {\n      return Client.instance.request(`/albums/?ids=${ids}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/albums/${ids}`, 'GET', query);\n    }\n  }\n\n  /**\n   * Get a list of new album releases featured in Spotify.\n   *\n   * @see https://developer.spotify.com/web-api/get-list-new-releases/\n   *\n   * @public\n   * @required {OAuth} user-library-read\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} albumsCollection\n   */\n  newReleases(query) {\n    return Client.instance.request(`/browse/new-releases`, 'GET', query);\n  }\n\n  /**\n   * Convert a valid object to a Album entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @returns {Object} Album\n   */\n  convert(item) {\n    return new Album(item);\n  }\n\n}\n\n/**\n * Exports the AlbumHandler class.\n */\nexport default AlbumHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/AlbumHandler.js","'use strict';\n\nimport AlbumEntity from '../entities/AlbumEntity';\nimport AlbumHandler from '../handlers/AlbumHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to AlbumEntity\n */\nclass Album extends AlbumEntity {\n\n\t/**\n   * @param {Object} data Album object\n   */\n  constructor(data) {\n    super(data);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Album;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Album.js","'use strict';\n\n/**\n * Properties and methods of the Album Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#album-object-full\n */\nclass AlbumEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Album object\n   */\n  constructor(data = {}) {\n    this._album_type = data.album_type;\n    this._artists = data.artists;\n    this._available_markets = data.available_markets;\n    this._copyrights = data.copyrights;\n    this._external_ids = data.external_ids;\n    this._external_urls = data.external_urls;\n    this._genres = data.genres;\n    this._href = data.href;\n    this._id = data.id;\n    this._images = data.images;\n    this._name = data.name;\n    this._popularity = data.popularity;\n    this._release_date = data.release_date;\n    this._release_date_precision = data.release_date_precision;\n    this._tracks = data.tracks;\n    this._type = data.type;\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set album_type(data) {\n    this._album_type = data.album_type\n  }\n\n  /**\n   * @return {String} Album type\n   */\n  get album_type() {\n    return this._album_type;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set artists(data) {\n    this._artists = data.artists\n  }\n\n  /**\n   * @return {String} Album artists\n   */\n  get artists() {\n    return this._artists;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set available_markets(data) {\n    this._available_markets = data.available_markets\n  }\n\n  /**\n   * @return {String} Album available_markets\n   */\n  get available_markets() {\n    return this._available_markets;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set copyrights(data) {\n    this._copyrights = data.copyrights\n  }\n\n  /**\n   * @return {String} Album copyrights\n   */\n  get copyrights() {\n    return this._copyrights;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set external_ids(data) {\n    this._external_ids = data.external_ids\n  }\n\n  /**\n   * @return {String} Album external_ids\n   */\n  get external_ids() {\n    return this._external_ids;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set external_urls(data) {\n    this._external_urls = data.external_urls\n  }\n\n  /**\n   * @return {String} Album external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set genres(data) {\n    this._genres = data.genres\n  }\n\n  /**\n   * @return {String} Album genres\n   */\n  get genres() {\n    return this._genres;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set href(data) {\n    this._href = data.href\n  }\n\n  /**\n   * @return {String} Album href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set id(data) {\n    this._id = data.id\n  }\n\n  /**\n   * @return {String} Album id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set images(data) {\n    this._images = data.images\n  }\n\n  /**\n   * @return {String} Album images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set name(data) {\n    this._name = data.name\n  }\n\n  /**\n   * @return {String} Album name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set popularity(data) {\n    this._popularity = data.popularity\n  }\n\n  /**\n   * @return {String} Album popularity\n   */\n  get popularity() {\n    return this._popularity;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set release_date(data) {\n    this._release_date = data.release_date\n  }\n\n  /**\n   * @return {String} Album release_date\n   */\n  get release_date() {\n    return this._release_date;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set release_date_precision(data) {\n    this._release_date_precision = data.release_date_precision\n  }\n\n  /**\n   * @return {String} Album release_date_precision\n   */\n  get release_date_precision() {\n    return this._release_date_precision;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set tracks(data) {\n    this._tracks = data.tracks\n  }\n\n  /**\n   * @return {String} Album tracks\n   */\n  get tracks() {\n    return this._tracks;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set type(data) {\n    this._type = data.type\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set uri(data) {\n    this._uri = data.uri\n  }\n\n  /**\n   * @return {String} Album uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default AlbumEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/AlbumEntity.js","'use strict';\n\nimport Track from '../helpers/Track';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more tracks from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/track-endpoints/\n */\nclass TrackHandler {\n\n    /**\n     * Get a collection of tracks that match a keyword string.\n     *\n     * @see https://developer.spotify.com/web-api/search-item/\n     *\n     * @public\n     * @param {String} name Name of the track.\n     * @param {Object} [query] Query parameters.\n     * @return {Promise} trackCollection\n     */\n    search(name, query) {\n      return Client.instance.request(`/search?type=track&q=${encodeURIComponent(name)}`, 'GET', query);\n    }\n\n    /**\n     * Get a single/collection of track/s identified by its unique/list of Spotify ID.\n     *\n     * @see https://developer.spotify.com/web-api/get-albums-tracks/ FIXME: check the url\n     *\n     * @public\n     * @param {String|Array} ids Track id/ids to retrive\n     * @param {Object} [query] Query parameters.\n     * @return {Promise} Track|trackCollection\n     */\n    get(ids, query) {\n      if (Array.isArray(ids)) {\n        return Client.instance.request(`/tracks/?ids=${ids}`, 'GET', query);\n      } else {\n        return Client.instance.request(`/tracks/${ids}`, 'GET', query);\n      }\n    }\n\n    /**\n     * Get audio feature information for a single track identified by its unique Spotify ID\n     *\n     * @see https://developer.spotify.com/web-api/get-audio-features/\n     *\n     * @public\n     * @param {In/Arrayt} ids Track id or ids\n     * @return {Promise} Track|trackCollection\n     */\n    audioFeatures(ids) {\n      if (Array.isArray(ids)) {\n        return Client.instance.request(`/audio-features`, 'GET', {ids: ids});\n      } else {\n        return Client.instance.request(`/audio-features/${ids}`, 'GET');\n      }\n    }\n\n    /**\n     * Convert a valid object to a Track entity\n     *\n     * @public\n     * @param {Object} item Object to convert in entity\n     * @return {Object}\n     */\n    convert(item) {\n      if (item.uri) {\n        return new Track(item);\n      } else {\n        return new Track(item.track);\n      }\n    }\n\n}\n\n/**\n * Exports the TrackHandler class.\n */\nexport default TrackHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/TrackHandler.js","'use strict';\n\nimport TrackEntity from '../entities/TrackEntity';\nimport TrackHandler from '../handlers/TrackHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to TrackEntity\n */\nclass Track extends TrackEntity {\n\n  /**\n   * @param {Object} data Track object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Tracks of an Artist.\n   *\n   * @public\n   * @return {Promise}\n   */\n  get artists() {\n    return Factory(this._artists);\n  }\n\n  /**\n   * Convert duration from ms to m\n   *\n   * @public\n   * @return {String} mm:ss\n   */\n  get durationM() {\n    let x = ~~( Number( this._duration_ms ) / 1000 );\n    let seconds = x % 60;\n    seconds = `${ seconds }`.length == 1? `0${ seconds }`: seconds;\n    x = ~~( x / 60 );\n    let minutes = x % 60;\n    return `${ minutes }:${ seconds }`;\n  }\n\n  audioFeatures() {\n    return new TrackHandler().audioFeatures(this.id);\n  }\n}\n\n/**\n * Exports the Track class.\n */\nexport default Track;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Track.js","'use strict';\n\n/**\n * Properties and methods of the Track Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#track-object-full\n */\nclass TrackEntity{\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Track object\n   */\n  constructor(data = {}) {\n    this._album = data.album;\n    this._artists = data.artists;\n    this._available_markets = data.available_markets;\n    this._disc_number = data.disc_number;\n    this._duration_ms = data.duration_ms;\n    this._explicit = data.explicit;\n    this._external_ids = data.external_ids;\n    this._external_urls = data.external_urls;\n    this._href = data.href;\n    this._id = data.id;\n    // this._is_playable = data.is_playable; @relinking\n    // this._linked_from = data.linked_from; @relinking\n    this._name = data.name;\n    this._popularity = data.popularity;\n    this._preview_url = data.preview_url;\n    this._track_number = data.track_number;\n    this._type = 'track';\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set album(data) {\n    this._album = data;\n  }\n\n  /**\n   * @return {String} Track album\n   */\n  get album() {\n    return this._album;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set artists(data) {\n    this._artists = data;\n  }\n\n  /**\n   * @return {String} Track artists\n   */\n  get artists() {\n    return this._artists;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set available_markets(data) {\n    this._available_markets = data;\n  }\n\n  /**\n   * @return {String} Track available_markets\n   */\n  get available_markets() {\n    return this._available_markets;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set disc_number(data) {\n    this._disc_number = data;\n  }\n\n  /**\n   * @return {String} Track disc_number\n   */\n  get disc_number() {\n    return this._disc_number;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set duration_ms(data) {\n    this._duration_ms = data;\n  }\n\n  /**\n   * @return {String} Track duration_ms\n   */\n  get duration_ms() {\n    return this._duration_ms;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set explicit(data) {\n    this._explicit = data;\n  }\n\n  /**\n   * @return {String} Track explicit\n   */\n  get explicit() {\n    return this._explicit;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set external_ids(data) {\n    this._external_ids = data;\n  }\n\n  /**\n   * @return {String} Track external_ids\n   */\n  get external_ids() {\n    return this._external_ids;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} Track external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} Track href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set id(data) {\n    this._id = data;\n  }\n\n  /**\n   * @return {String} Track id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set is_playable(data) {\n    this._is_playable = data;\n  }\n\n  /**\n   * @return {String} Track is_playable\n   */\n  get is_playable() {\n    return this._is_playable;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set linked_from(data) {\n    this._linked_from = data;\n  }\n\n  /**\n   * @return {String} Track linked_from\n   */\n  get linked_from() {\n    return this._linked_from;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} Track name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set popularity(data) {\n    this._popularity = data;\n  }\n\n  /**\n   * @return {String} Track popularity\n   */\n  get popularity() {\n    return this._popularity;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set preview_url(data) {\n    this._preview_url = data;\n  }\n\n  /**\n   * @return {String} Track preview_url\n   */\n  get preview_url() {\n    return this._preview_url;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set track_number(data) {\n    this._track_number = data;\n  }\n\n  /**\n   * @return {String} Track track_number\n   */\n  get track_number() {\n    return this._track_number;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set type(data) {\n    this._type = data;\n  }\n\n  /**\n   * @return {String} Track type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {String} Track uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the TrackEntity class.\n */\nexport default TrackEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/TrackEntity.js","'use strict';\n\nimport Playlist from '../helpers/Playlist';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about playlists and for managing playlists.\n *\n * @see https://developer.spotify.com/web-api/playlist-endpoints/\n */\nclass PlaylistHandler {\n\n  /**\n   * Get a collection of artists that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the playlist.\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=playlist&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a list of Spotify featured playlists.\n   * @see https://developer.spotify.com/web-api/get-list-featured-playlists/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  featuredPlaylists(query) {\n    return Client.instance.request(`/browse/featured-playlists`, 'GET', query);\n  }\n\n  /**\n   * Get a list of Spotify playlists tagged with a particular category.\n   * @see https://developer.spotify.com/web-api/get-categorys-playlists/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {int} id Category id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  categoriesPlaylists(id, query) {\n    return Client.instance.request(`/browse/categories/${id}/playlists`, 'GET', query);\n  }\n\n  /**\n   * Add one or more tracks to a user’s playlist.\n   * @see https://developer.spotify.com/web-api/add-tracks-to-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {array} tracks List of uri tracks\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  addTracks(tracks, userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/tracks`,\n        'POST',\n        {uris: tracks}\n      );\n  }\n\n  /**\n   * Remove one or more tracks from a user’s playlist.\n   * @see https://developer.spotify.com/web-api/remove-tracks-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {array} tracks List of uri tracks\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  removeTracks(tracks, userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/tracks`,\n        'DELETE',\n        {uris: tracks}\n      );\n  }\n\n  /**\n   * Add a user as a follower of a playlist.\n   * @see https://developer.spotify.com/web-api/follow-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  follow(userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/followers`,\n        'PUT'\n      );\n  }\n\n  /**\n   * Remove a user as a follower of a playlist.\n   * @see https://developer.spotify.com/web-api/unfollow-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  unfollow(userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/followers`,\n        'DELETE'\n      );\n  }\n\n  /**\n   * Check to see if one or more Spotify users are following a specified playlist.\n   * @see https://developer.spotify.com/web-api/check-user-following-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {Array} ids User id list\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @return {Promise} JSON response\n   */\n  contains(userId, playlistId, ids) {\n    return Client.instance.request(\n      `/users/${userId}/playlists/${playlistId}/followers/contains`,\n      'GET',\n      {ids: ids}\n    );\n  }\n\n  /**\n   * Create a playlist for a Spotify user.\n   * @see https://developer.spotify.com/web-api/create-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} name Name of the future playlist\n   * @param {Bool} is_public public or private\n   * @return {Promise} JSON response\n   */\n  create(userId, name, is_public) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists`,\n        'POST',\n        {name: name, public: is_public}\n     );\n  }\n\n  /**\n   * Change a playlist’s name and public/private state.\n   * @see https://developer.spotify.com/web-api/change-playlist-details/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {String} name Name of the future playlist\n   * @param {Bool} is_public public or private\n   * @return {Promise} JSON response\n   */\n  edit(userId, playlistId, name, is_public) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists`,\n        'PUT',\n        {name: name, public: is_public}\n      );\n  }\n\n  /**\n   * Convert a valid object to a Playlist entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @return {Object}\n   */\n  convert(item) {\n    return new Playlist(item);\n  }\n\n}\n\n/**\n * Exports the PlaylistHandler class.\n */\nexport default PlaylistHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/PlaylistHandler.js","'use strict';\n\nimport PlaylistEntity from '../entities/PlaylistEntity';\nimport PlaylistHandler from '../handlers/PlaylistHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to PlaylistEntity\n */\nclass Playlist extends PlaylistEntity {\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Tracks of a Playlist.\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get tracks() {\n    return Factory(this._tracks);\n  }\n\n  /**\n   * Add one or more Tracks to a Playlist.\n   *\n   * @public\n   * @param {Array} tracks Tracks list\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  addTrack(tracks, query) {\n    let trackList = tracks.map(track => {\n      return track.uri;\n    });\n    return new PlaylistHandler().addTracks(trackList, this.owner.id, this.id, query);\n  }\n\n  /**\n   * Remove one or more Tracks to a Playlist.\n   *\n   * @public\n   * @param {Array} tracks Tracks list\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  removeTrack(tracks, query) {\n    let trackList = tracks.map(track => {\n      return track.uri;\n    });\n    return new PlaylistHandler().removeTracks(trackList, this.owner.id, this.id, query);\n  }\n\n  /**\n   * Follow a Playlist\n   *\n   * @public\n   * @param {Object} [query] query parameters.\n   * @return {Promise}\n   */\n  follow(query) {\n    return new PlaylistHandler().follow(this.owner.id, this.id, query);\n  }\n\n  /**\n   * Unfollow a Playlist\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  unfollow(query) {\n    return new PlaylistHandler().unfollow(this.owner.id, this.id, query);\n  }\n\n  /**\n   * Verify if a user follow a playlist\n   *\n   * @public\n   * @param {Array} [ids] User ids list.\n   * @return {Promise}\n   */\n  contains(ids) {\n    return new PlaylistHandler().contains(this.owner.id, this.id, ids);\n  }\n\n  /**\n   * Edit a Playlist\n   *\n   * @public\n   * @return {Promise}\n   */\n  edit() {\n    return new PlaylistHandler().edit(this.owner.id, this.id, this.name, this.public);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Playlist;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Playlist.js","'use strict';\n\n/**\n * Properties and methods of the Playlist Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#playlist-object-full\n */\nclass PlaylistEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Playlist object\n   */\n  constructor(data = {}) {\n    this._collaborative = data.collaborative;\n    this._description = data.description;\n    this._external_urls = data.external_urls;\n    this._followers = data.followers;\n    this._href = data.href;\n    this._id = data.id;\n    this._images = data.images;\n    this._name = data.name;\n    this._owner = data.owner;\n    this._public = data.public;\n    this._snapshot_id = data.snapshot_id;\n    this._tracks = data.tracks;\n    this._type = data.type;\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set collaborative(data) {\n    this._collaborative = data;\n  }\n\n  /**\n   * @return {String} Playlist collaborative\n   */\n  get collaborative() {\n    return this._collaborative;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set description(data) {\n    this._description = data;\n  }\n\n  /**\n   * @return {String} Playlist description\n   */\n  get description() {\n    return this._description;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} Playlist external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set followers(data) {\n    this._followers = data;\n  }\n\n  /**\n   * @return {String} Playlist followers\n   */\n  get followers() {\n    return this._followers;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} Playlist href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set id(data) {\n    this._id = data;\n  }\n\n  /**\n   * @return {Playlist} Album id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set images(data) {\n    this._images = data;\n  }\n\n  /**\n   * @return {String} Playlist images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} Playlist name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set owner(data) {\n    this._owner = data;\n  }\n\n  /**\n   * @return {String} Playlist owner\n   */\n  get owner() {\n    return this._owner;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set public(data) {\n    this._public = data;\n  }\n\n  /**\n   * @return {String} Playlist public\n   */\n  get public() {\n    return this._public;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set snapshot_id(data) {\n    this._snapshot_id = data;\n  }\n\n  /**\n   * @return {String} Playlist snapshot_id\n   */\n  get snapshot_id() {\n    return this._snapshot_id;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set tracks(data) {\n    this._tracks = data;\n  }\n\n  /**\n   * @return {String} Playlist tracks\n   */\n  get tracks() {\n    return this._tracks;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set type(data) {\n    this._type = data;\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {Playlist} Album uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default PlaylistEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/PlaylistEntity.js","'use strict';\n\nimport User from '../helpers/User';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more user/s from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/user-profile-endpoints/\n */\nclass UserHandler {\n\n  /**\n   * Get detailed profile information about the current user.\n   *\n   * @see https://developer.spotify.com/web-api/get-current-users-profile/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} User\n   */\n  me() {\n    return Client.instance.request(`/me`);\n  }\n\n  /**\n   * Get public profile information about a Spotify user.\n   *\n   * @see https://developer.spotify.com/web-api/get-users-profile/\n   *\n   * @public\n   * @param {String} id User id to retrive\n   * @required {OAuth}\n   * @return {Promise} User\n   */\n  get(id) {\n    return Client.instance.request(`/users/${id}`);\n  }\n\n  /**\n   * Get a list of the playlists owned or followed by a Spotify user.\n   *\n   * @see https://developer.spotify.com/web-api/get-list-users-playlists/\n   *\n   * @public\n   * @param {String} id User User id\n   * @param {String} [playlistId] id to retrive playlists\n   * @param {Object} [query] Query parameters.\n   * @required {OAuth}\n   * @return {Promise} playlistCollection\n   */\n  playlists(id, playlistId, query) {\n    if (playlistId) {\n      return Client.instance.request(`/users/${id}/playlists/${playlistId}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/users/${id}/playlists`, 'GET', query);\n    }\n  }\n\n  /**\n   * Check if a user follow an album, artist , track or user\n   * @see https://developer.spotify.com/web-api/check-users-saved-albums/\n   * @see https://developer.spotify.com/web-api/check-current-user-follows/\n   *\n   * @public\n   * @required {OAuth} user-follow-read scope\n   * @param {String} type artist, album or user\n   * @param {Array} ids User id list\n   * @return {Promise} JSON response\n   */\n  contains(type, ids) {\n    if (type === 'album') {\n      return Client.instance.request(\n        `/me/albums/contains`,\n        'GET',\n        {ids: ids}\n      );\n    } else if (type === 'track') {\n      return Client.instance.request(\n        `/me/tracks/contains`,\n        'GET',\n        {ids: ids}\n      );\n    } else {\n      return Client.instance.request(\n        `/me/following/contains`,\n        'GET',\n        {ids: ids, type: type}\n      );\n    }\n  }\n\n  /**\n   * Get the current user’s top artists or tracks based on calculated affinity.\n   * @see https://developer.spotify.com/web-api/get-users-top-artists-and-tracks/\n   *\n   * @public\n   * @required {OAuth} user-top-read\n   * @param {String} type artists or tracks\n   * @param {Object} query limit, offset or time_range(long_term, medium_term, short_term)\n   * @return {Promise} JSON response\n   */\n  top(type, query) {\n    return Client.instance.request(`/me/top/${type}`, 'GET', query);\n  }\n\n  /**\n   * Get the current user’s saved tracks.\n   * @see https://developer.spotify.com/web-api/get-users-saved-tracks/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} Tracks saved\n   */\n  tracks() {\n    return Client.instance.request(`/me/tracks`);\n  }\n\n  /**\n   * Get the current user’s saved albums.\n   * @see https://developer.spotify.com/web-api/get-users-saved-albums/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} Albums saved\n   */\n  albums() {\n    return Client.instance.request(`/me/albums`);\n  }\n\n  /**\n   * Convert a valid object to a User entity\n   *\n   * @public\n   * @param {object} item Object to convert in entity\n   * @return {Object}\n   */\n  convert(item) {\n    return new User(item);\n  }\n}\n\n/**\n * Exports the UserHandler class.\n */\nexport default UserHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/UserHandler.js","'use strict';\n\nimport UserEntity from '../entities/UserEntity';\nimport UserHandler from '../handlers/UserHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to UserEntity\n */\nclass User extends UserEntity {\n\n  /**\n   * @param {Object} data User object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get user Playlists\n   *\n   * @public\n   * @param {String} id Playlist id.\n   * @return {Promise}\n   */\n  playlists(id) {\n  \treturn new UserHandler().playlists(this.id, id);\n  }\n\n  /**\n   * Check if a user follow an album, artist or user\n   *\n   * @public\n   * @param {String} type artist, album or user\n   * @param {Array} ids User id list\n   * @return {Promise} JSON response\n   */\n  contains(type, ids) {\n    return new UserHandler().contains(type, ids);\n  }\n\n  /**\n   * Get a User’s Top Artists and Tracks\n   *\n   * @public\n   * @required {OAuth} user-top-read\n   * @param {String} type artists or tracks\n   * @param {Object} query limit, offset or time_range(long_term, medium_term, short_term)\n   * @return {Promise} JSON response\n   */\n  top(type, query) {\n    return new UserHandler().top(type, query);\n  }\n\n  /**\n   * Get user’s Saved Tracks\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise}\n   */\n  tracks() {\n    return new UserHandler().tracks();\n  }\n\n  /**\n   * Get user’s Saved Albums\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise}\n   */\n  albums() {\n    return new UserHandler().albums();\n  }\n}\n\n/**\n * Exports the User class.\n */\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/User.js","'use strict';\n\n/**\n * Properties and methods of the User Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#user-object-private\n */\nclass UserEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data User object\n   */\n  constructor(data = {}) {\n    this._id = data.id;\n    this._birthdate = data.birthdate;\n    this._country = data.country;\n    this._display_name = data.display_name;\n    this._email = data.email;\n    this._external_urls = data.external_urls;\n    this._followers = data.followers;\n    this._href = data.href;\n    this._images = data.images;\n    this._product = data.product;\n    this._type = 'user';\n    this._uri = data.uri;\n  }\n\n  /**\n   * @return {String} User birthdate\n   */\n  get birthdate() {\n    return this._birthdate;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set birthdate(data) {\n    this._birthdate = data;\n  }\n\n  /**\n   * @return {String} User country\n   */\n  get country() {\n    return this._country;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set country(data) {\n    this._country = data;\n  }\n\n  /**\n   * @return {String} User display_email\n   */\n  get display_email() {\n    return this._display_email;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set display_email(data) {\n    this._display_email = data;\n  }\n\n  /**\n   * @return {String} User name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} User external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} User followers\n   */\n  get followers() {\n    return this._followers;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set followers(data) {\n    this._followers = data;\n  }\n\n  /**\n   * @return {String} User href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} User images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set images(data) {\n    this._images = data;\n  }\n\n  /**\n   * @return {String} User product\n   */\n  get product() {\n    return this._product;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set product(data) {\n    this._product = data;\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @return {String} User uri\n   */\n  get uri() {\n    return this._uri;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {User} Track id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set id(data) {\n    this._id = data;\n  }\n}\n\n/**\n * Exports the UserEntity class.\n */\nexport default UserEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/UserEntity.js","\"user strict\";\nimport Collection from '../helpers/Collection';\n\n/**\n * Collection constructor\n */\nclass CollectionHandler {\n\n\t/**\n   * Constructor\n   *\n   * @public\n   * @param {Array} items Entity list\n   * @param {Object} handler Entity handler\n   * @param {Object} source Original response\n   * @return {Array} Collection\n   */\n\tconstructor(items, handler, source) {\n    let collectionHelper = new Collection(source);\n    let collection = Object.assign(new Array, collectionHelper);\n    // Super mega hack\n    collection.next = () => collectionHelper.next;\n    collection.previous = () => collectionHelper.previous;\n    collection.last = collectionHelper.last;\n    collection.first = collectionHelper.first;\n    collection.index = collectionHelper.index;\n\n\t\titems.map((item) => {\n\t\t\treturn collection.push(new handler().convert(item));\n\t\t});\n\n\t\tif (collection.length) {\n\t\t\tcollection.type = collection[0].type;\n\t\t}\n\n\t\t// collection.source = source; FIXME: review this\n\t\treturn collection;\n\t}\n\n}\n\n/**\n * Exports the CollectionHandler class.\n */\nexport default CollectionHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/CollectionHandler.js","'use strict';\n\nimport CollectionEntity from '../entities/CollectionEntity';\nimport Factory from '../Factory';\n\n\n/**\n * Add helpers methods to CollectionEntity\n */\nclass Collection extends CollectionEntity {\n\n  /**\n   * @param {Object} data Collection object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get the next page of the Collection\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get next() {\n    return Factory({href: this._next});\n  }\n\n  /**\n   * Get the prev page of the Collection\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get previous() {\n    return Factory({href: this._next});\n  }\n\n  /**\n   * Get the first Entity of the Collection\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  first() {\n    return this[0];\n  }\n\n  /**\n   * Get the last Entity of the Collection\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  last() {\n    return this[this.length-1];\n  }\n\n  /**\n   * Get a Entity based of a index\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  index(id) {\n    return this[id];\n  }\n}\n\n/**\n * Exports the Collection class.\n */\nexport default Collection\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Collection.js","'use strict';\n\n/**\n * Properties and methods of the Collection Entity\n */\nclass Collection {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Api object\n   */\n  constructor(data = {}) {\n    this._href = data.href;\n    this._limit = data.limit;\n    this._next = data.next;\n    this._offset = data.offset;\n    this._previous = data.previous;\n    this._total = data.total;\n  }\n\n  /**\n   * @param {Object} data Api response type\n   */\n  set type(data) {\n    this._type = `${data}Collection`;\n  }\n\n  /**\n   * @return {String} Collection type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Api response href\n   */\n  set href(data) {\n    this._href = data.href;\n  }\n\n  /**\n   * @return {String} Collection href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Api response limit\n   */\n  set limit(data) {\n    this._limit = data.limit;\n  }\n\n  /**\n   * @return {String} Collection limit\n   */\n  get limit() {\n    return this._limit;\n  }\n\n  /**\n   * @param {Object} data Api response next\n   */\n  set next(data) {\n    this._next = data.next;\n  }\n\n  /**\n   * @return {String} Collection next\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * @param {Object} data Api response offset\n   */\n  set offset(data) {\n    this._offset = data.offset\n  }\n\n  /**\n   * @return {String} Collection offset\n   */\n  get offset() {\n    return this._offset;\n  }\n\n  /**\n   * @param {Object} data Api response previous\n   */\n  set previous(data) {\n    this._previous = data.previous;\n  }\n\n  /**\n   * @return {String} Collection previous\n   */\n  get previous() {\n    return this._previous;\n  }\n\n  /**\n   * @param {Object} data Api response total\n   */\n  set total(data) {\n    this._total = data.total;\n  }\n\n  /**\n   * @return {String} Collection total\n   */\n  get total() {\n    return this._total;\n  }\n\n}\n\n/**\n * Exports the Collection class.\n */\nexport default Collection;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/CollectionEntity.js"],"sourceRoot":""}