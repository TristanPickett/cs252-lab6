{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2665370d52a242ea9dfe","webpack:///./public/home.js","webpack:///./public/src/Client.js","webpack:///./public/src/Factory.js","webpack:///./public/src/handlers/ArtistHandler.js","webpack:///./public/src/helpers/Artist.js","webpack:///./public/src/entities/ArtistEntity.js","webpack:///./public/src/handlers/AlbumHandler.js","webpack:///./public/src/helpers/Album.js","webpack:///./public/src/entities/AlbumEntity.js","webpack:///./public/src/handlers/TrackHandler.js","webpack:///./public/src/helpers/Track.js","webpack:///./public/src/entities/TrackEntity.js","webpack:///./public/src/handlers/PlaylistHandler.js","webpack:///./public/src/helpers/Playlist.js","webpack:///./public/src/entities/PlaylistEntity.js","webpack:///./public/src/handlers/UserHandler.js","webpack:///./public/src/helpers/User.js","webpack:///./public/src/entities/UserEntity.js","webpack:///./public/src/handlers/CollectionHandler.js","webpack:///./public/src/helpers/Collection.js","webpack:///./public/src/entities/CollectionEntity.js"],"names":["client","instance","settings","clientId","secretId","scopes","redirect_uri","session","sessionStorage","token","window","location","hash","split","track","TrackHandler","search","limit","then","trackCollection","console","log","user","createNode","element","document","createElement","append","parent","el","appendChild","me","userEntity","_id","ul","getElementById","playlists","playlistCollection","map","playlist","a","img","p","_images","length","src","style","cssText","href","className","innerHTML","_name","singleton","Symbol","singletonEnforcer","Client","enforcer","_token","_clientId","_secretId","_scopes","_redirect_uri","callback","url_login","encodeURIComponent","Promise","resolve","url","method","body","fetch","data","bind","obj","str","hasOwnProperty","push","join","endpoint","_headers","_url","_body","Authorization","indexOf","separator","toQueryString","JSON","stringify","checkStatus","response","status","error","Error","statusText","parseJSON","type","json","headers","Factory","_type","_items","_source","Object","keys","snapshot_id","Array","isArray","items","convert","request","ArtistHandler","name","query","ids","id","artists","item","Artist","albums","topTracks","relatedArtists","follow","unfollow","contains","ArtistEntity","_external_urls","external_urls","_followers","followers","_genres","genres","_href","images","_popularity","popularity","_uri","uri","AlbumHandler","Album","AlbumEntity","_album_type","album_type","_artists","_available_markets","available_markets","_copyrights","copyrights","_external_ids","external_ids","_release_date","release_date","_release_date_precision","release_date_precision","_tracks","tracks","Track","audioFeatures","x","Number","_duration_ms","seconds","minutes","TrackEntity","_album","album","_disc_number","disc_number","duration_ms","_explicit","explicit","_preview_url","preview_url","_track_number","track_number","_is_playable","_linked_from","PlaylistHandler","userId","playlistId","uris","is_public","public","Playlist","trackList","addTracks","owner","removeTracks","edit","PlaylistEntity","_collaborative","collaborative","_description","description","_owner","_public","_snapshot_id","UserHandler","User","top","UserEntity","_birthdate","birthdate","_country","country","_display_name","display_name","_email","email","_product","product","_display_email","CollectionHandler","handler","source","collectionHelper","collection","assign","next","previous","last","first","index","Collection","_next","_limit","_offset","offset","_previous","_total","total"],"mappings":"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","file":"home_dist.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spotifySdk\"] = factory();\n\telse\n\t\troot[\"spotifySdk\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2665370d52a242ea9dfe","/*\n * Basic examples\n * Test a lot of handlers that don't require user login.\n *\n */\n'use strict'\n\nimport Client from './src/Client';\nimport PlaylistHandler from './src/handlers/PlaylistHandler';\nimport UserHandler from './src/handlers/UserHandler';\n\nlet client = Client.instance;\n\nclient.settings = {\n    clientId: 'c7b3b4be06ec43cfa7ed4facfed7a6bc',\n    secretId: 'd8a020b39ffd43ddabd458ec712b7dad',\n    scopes: ['user-library-read user-top-read playlist-read-private playlist-read-collaborative'],\n    redirect_uri: 'https://spotiphy-0.firebaseapp.com/home.html'\n};\n\nfunction session() {\n\tif (sessionStorage.token) {\n\t\t\tclient.token = sessionStorage.token;\n\t} else if (window.location.hash.split('&')[0].split('=')[1]) {\n\t\t\tsessionStorage.token = window.location.hash.split('&')[0].split('=')[1];\n\t\t\tclient.token = sessionStorage.token;\n\t}\n}\nsession();\n\n/*\n * TrackHandler Examples\n *\n */\nvar track = new TrackHandler();\n\n/*\n * #1 example\n * Get tracks with the name 'R U mine?', should return a Collection of tracks.\n */\ntrack.search('R U mine?', {limit: 5}).then((trackCollection) => {\n\tconsole.log(trackCollection);\n});\n\n/*\n * UserHandler Examples\n *\n */\nvar user = new UserHandler();\n\nfunction createNode(element) {\n    return document.createElement(element);\n}\n\nfunction append(parent, el) {\n  return parent.appendChild(el);\n}\n\n/*\n * #1 example\n * Get the current user.\n */\nuser.me().then((userEntity) => {\n\t\tconsole.log(userEntity);\n\t\tconsole.log(userEntity._id);\n    const ul = document.getElementById('playlists')\n\t\tuser.playlists(userEntity._id).then((playlistCollection) => {\n\t\t\tconsole.log(playlistCollection);\n      playlistCollection.map(function(playlist) {\n        let a = createNode('a'),\n            img = createNode('img'),\n            p = createNode('p');\n        if (playlist._images.length == 1) {\n          img.src = playlist._images[0][\"url\"];\n          img.style.cssText = \"width: 120px; height: 120px;\";\n        }\n        else {\n          img.src = playlist._images[1][\"url\"];\n          img.style.cssText = \"width: 120px; height: 120px;\";\n        }\n        a.href = \"/playlist.html#id=\" + playlist._id;\n        a.className += \" card\";\n        p.innerHTML = playlist._name;\n        p.className += \" card-text\";\n        append(a, img);\n        append(a, p);\n        append(ul, a);\n      });\n\t\t});\n});\n\n\n// WEBPACK FOOTER //\n// ./public/home.js","import Factory from './Factory';\n\nlet singleton = Symbol();\nlet singletonEnforcer = Symbol();\n\n/**\n * Client is the responsible of comunicate with the API.\n */\nclass Client {\n\n  /**\n   * Constructor\n   *\n   * @param {Symbol} enforcer\n   */\n  constructor(enforcer) {\n    this._token = null;\n    this._clientId = null;\n    this._secretId = null;\n    this._scopes = null;\n    this._redirect_uri = null;\n\n    if (enforcer != singletonEnforcer) {\n      throw \"Cannot construct singleton\";\n    }\n  }\n\n  /**\n   * Get the current instance of Client\n   *\n   * @return {Object} instance\n   */\n  static get instance() {\n    if (!this[singleton]) {\n      this[singleton] = new Client(singletonEnforcer);\n    }\n    return this[singleton];\n  }\n\n  /**\n   * Set settings\n   *\n   * @param {Object} settings Settings\n   */\n  set settings(settings) {\n    this._token = settings.token;\n    this._clientId = settings.clientId;\n    this._secretId = settings.secretId;\n    this._scopes = settings.scopes;\n    this._redirect_uri = settings.redirect_uri;\n  }\n\n  /**\n   * Set token\n   *\n   * @param {String} data Token\n   */\n  set token(data) {\n    this._token = data;\n  }\n\n  /**\n   * Get the current token\n   *\n   * @return {String} Current token\n   */\n  get token() {\n    return this._token;\n  }\n\n  /**\n   * This method fires a new window that allow login\n   *\n   * @param  {Function} callback\n   * @return {Function|Promise}\n   */\n  login(callback) {\n    let url_login = 'https://accounts.spotify.com/en/authorize?response_type=token&client_id=' +\n      this._clientId + '&redirect_uri=' + encodeURIComponent(this._redirect_uri) +\n      ( this._scopes ? '&scope=' + encodeURIComponent(this._scopes) : '');\n    if (callback) {\n      return callback(url_login);\n    } else {\n      return new Promise((resolve) => {\n        resolve(url_login);\n      });\n    }\n  }\n\n  /**\n   * @param  {String} url Endpoint\n   * @param  {String} method Method GET, POST, PUT or DELETE\n   * @param  {Object} body Object to send in the body\n   * @return {Promise}\n   */\n  request(url, method, body) {\n    return this.fetch(url, method, body).then(function (data) {\n      return Factory(data);\n    }.bind(this));\n  }\n\n  /**\n   * Function that encode objects\n   *\n   * @param  {Object} obj Object to encode\n   * @return {String} A encode object\n   */\n  toQueryString(obj) {\n    let str = [];\n    for (let p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n\n  /**\n   * @param  {String} endpoint Endpoint\n   * @param  {String} method Method GET, POST, PUT or DELETE (default GET)\n   * @param  {Object} body Object to send in the body\n   * @return {Promise}\n   */\n  fetch(endpoint, method, body) {\n    let _headers = {'Accept': 'application/json'};\n    let _url;\n    let _body;\n\n    method = method || 'GET';\n\n    if (this._token) {\n      _headers.Authorization = `Bearer ${this._token}`;\n    }\n\n    if (endpoint.indexOf('https') > -1) {\n      _url = endpoint;\n    } else {\n      _url = `https://api.spotify.com/v1${endpoint}`;\n    }\n\n    if (method === 'GET') {\n      if (body) {\n        let separator = _url.indexOf('?') !== -1 ? \"&\" : \"?\";\n        _url = _url + separator + this.toQueryString(body);\n      }\n    } else {\n      _body = JSON.stringify(body);\n    }\n\n    let checkStatus = (response) => {\n      if (response.status >= 200 && response.status < 300) {\n        return response;\n      } else {\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    };\n\n    let parseJSON = (response) => {\n      if (response.statusText === 'No Content') {\n        return {type: 'undefineds'};\n      }\n      return response.json();\n    };\n\n    return fetch(_url, {\n      method : method,\n      headers: _headers,\n      body   : _body\n    }).then(checkStatus)\n      .then(parseJSON)\n  };\n}\n\n/**\n * Exports the Client class.\n */\nexport default Client;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/Client.js","import ArtistHandler from './handlers/ArtistHandler';\nimport AlbumHandler from './handlers/AlbumHandler';\nimport TrackHandler from './handlers/TrackHandler';\nimport PlaylistHandler from './handlers/PlaylistHandler';\nimport UserHandler from './handlers/UserHandler';\nimport CollectionHandler from './handlers/CollectionHandler';\nimport Client from './Client';\n\n/**\n * Factory is the responsible of create new entities or collections\n *\n * @param {Object} data Entity object or Api response\n */\nlet Factory = function(data) {\n  let _type;\n  let _items;\n  let _source;\n\n  if (data.error) {\n    return data.error;\n  } else if (Object.keys(data).length === 1 && data.snapshot_id) {\n    return data;\n  }\n\n    // a lot of magic happens here :D\n  if (data.type) {\n    _type = data.type;\n    _items = data;\n  } else if (typeof Object.keys(data)[0] === 'string' && !Array.isArray(data) && !data.items) {\n    _type = Object.keys(data)[0];\n    _items = data[_type].items || data[_type];\n    _source = data[_type];\n  } else if (Array.isArray(data)){\n      _type = data[0].type+'s';\n      _items = data;\n  } else if (Array.isArray(data.items) && data.items[0].type) {\n    _type = data.items[0].type+'s';\n    _items = data.items;\n    _source = data;\n  } else if (Array.isArray(data.items) && !data.items[0].type) {\n    _items = data.items;\n    _type = Object.keys(data.items[0])[3]+'s';\n    _source = data;\n  }\n\n  switch(_type) {\n    case 'track':\n      return new TrackHandler().convert(_items);\n      break;\n    case 'tracks':\n      return new CollectionHandler(_items, TrackHandler, _source);\n      break;\n    case 'playlist':\n      return new PlaylistHandler().convert(_items);\n      break;\n    case 'playlists':\n      return new CollectionHandler(_items, PlaylistHandler, _source);\n      break;\n    case 'artists':\n      return new CollectionHandler(_items, ArtistHandler, _source);\n      break;\n    case 'album':\n      return new AlbumHandler().convert(_items);\n      break;\n    case 'albums':\n      return new CollectionHandler(_items, AlbumHandler, _source);\n      break;\n    case 'user':\n      return new UserHandler().convert(_items);\n      break;\n    case 'undefineds':\n      return data;\n      break;\n    case 'audio_features':\n      return data;\n      break;\n    default:\n      return Client.instance.request(data.href);\n  }\n};\n\n/**\n * Exports a function that init a new Factory.\n */\nexport default function(data) {\n  return new Factory(data);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/Factory.js","'use strict';\n\nimport Artist from '../helpers/Artist';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more artists from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/artist-endpoints/\n */\nclass ArtistHandler {\n\n  /**\n   * Get a collection of artists that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the artist.\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} artistCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=artist&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a single/collection of artist/s identified by its unique/list of Spotify ID.\n   *\n   * @see https://developer.spotify.com/web-api/get-artist/\n   *\n   * @public\n   * @param {String|Array} ids Artist id/ids to retrive\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} Artist|artistCollection\n   */\n  get(ids, query) {\n    if (Array.isArray(ids)) {\n      return Client.instance.request(`/artists/?ids=${ids}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/artists/${ids}`, 'GET', query);\n    }\n  }\n\n  /**\n   * Get Spotify catalog information about an artist’s albums.\n   *\n   * @see https://developer.spotify.com/web-api/get-artists-albums/\n   *\n   * @public\n   * @param {String} id Artist id to retrive\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} albumsCollection\n   */\n  albums(id, query) {\n    return Client.instance.request(`/artists/${id}/albums`, 'GET', query);\n  }\n\n  /**\n   * Get Spotify catalog information about an artist’s top tracks by country.\n   *\n   * @see https://developer.spotify.com/web-api/get-artists-top-tracks/\n   *\n   * @public\n   * @param {String} id Artist id to retrive top tracks\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} tracksCollection\n   */\n  topTracks(id, query) {\n    return Client.instance.request(`/artists/${id}/top-tracks`, 'GET', query);\n  }\n\n  /**\n   * Get Spotify catalog information about artists similar to a given artist.\n   *\n   * @see https://developer.spotify.com/web-api/get-related-artists/\n   *\n   * @public\n   * @param {String} id Artist id to retrive related artists\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} albumsCollection\n   */\n  relatedArtists(id, query) {\n    return Client.instance.request(`/artists/${id}/related-artists`, 'GET', query);\n  }\n\n  /**\n   * Add the current user as a follower of one or more artists.\n   *\n   * @see https://developer.spotify.com/web-api/follow-artists-users/\n   *\n   * @public\n   * @param {Array} artists List of artists ids\n   * @return {Promise} JSON reponse\n   */\n  follow(artists) {\n    return Client.instance\n      .request(\n        `/me/following?type=artist`,\n        'PUT',\n        {ids: artists}\n      );\n  }\n\n   /**\n   * Remove the current user as a follower of one or more artists.\n   *\n   * @see https://developer.spotify.com/web-api/unfollow-artists-users/\n   *\n   * @public\n   * @param {Array} artists List of artists ids\n   * @return {Promise} JSON reponse\n   */\n  unfollow(artists) {\n    return Client.instance\n      .request(\n        `/me/following?type=artist`,\n        'DELETE',\n        {ids: artists}\n      );\n  }\n\n  /**\n   * Convert a valid object to a Artist entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @return {Object} Artist\n   */\n  convert(item) {\n    return new Artist(item);\n  }\n\n}\n\n/**\n * Exports the AlbumHandler class.\n */\nexport default ArtistHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/ArtistHandler.js","'use strict';\n\nimport ArtistEntity from '../entities/ArtistEntity';\nimport ArtistHandler from '../handlers/ArtistHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to ArtistEntity\n */\nclass Artist extends ArtistEntity {\n\n  /**\n   * @param {Object} data Artist object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Albums of a Artist.\n   *\n   * @public\n   * @return {Promise}\n   */\n  albums() {\n    return new ArtistHandler().albums(this.id);\n  }\n\n  /**\n   * Get an Artist top tracks\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  topTracks(query) {\n    return new ArtistHandler().topTracks(this.id, query);\n  }\n\n  /**\n   * Get related Artists of an Artist\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  relatedArtists(query) {\n    return new ArtistHandler().relatedArtists(this.id, query);\n  }\n\n  /**\n   * Follow an Artist\n   *\n   * @public\n   * @param {Object} query Optional query parameters.\n   * @return {Promise}\n   */\n  follow(query) {\n    return new ArtistHandler().follow([this.id], query);\n  }\n\n  /**\n   * Unfollow an Artist\n   *\n   * @public\n   * @param {Object} query Optional query parameters.\n   * @return {Promise}\n   */\n  unfollow(query) {\n    return new ArtistHandler().unfollow([this.id], query);\n  }\n\n  /**\n   * Verify if a user follow an Artist\n   *\n   * @public\n   * @param {Array} [ids] User ids list.\n   * @return {Promise}\n   */\n  contains(ids) {\n    return new ArtistHandler().contains(this.id, ids);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Artist;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Artist.js","'use strict';\n\n/**\n * Properties and methods of the Artist Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#album-object-full\n */\nclass ArtistEntity {\n\n    /**\n     * Constructor\n     * \n     * @param {Object} data Artist object\n     */\n    constructor(data = {}) {\n        this._external_urls = data.external_urls;\n        this._followers = data.followers;\n        this._genres = data.genres;\n        this._href = data.href;\n        this._id = data.id;\n        this._images = data.images;\n        this._name = data.name;\n        this._popularity = data.popularity;\n        this._type = data.type;\n        this._uri = data.uri;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set external_urls(data) {\n        this._external_urls = data;\n    }\n\n    /**\n     * @return {String} Artist external_urls\n     */\n    get external_urls() {\n        return this._external_urls;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set followers(data) {\n        this._followers = data;\n    }\n\n    /**\n     * @return {String} Artist followers\n     */\n    get followers() {\n        return this._followers;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set genres(data) {\n        this._genres = data;\n    }\n\n    /**\n     * @return {String} Artist genres\n     */\n    get genres() {\n        return this._genres;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set href(data) {\n        this._href = data;\n    }\n\n    /**\n     * @return {String} Artist href\n     */\n    get href() {\n        return this._href;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set id(data) {\n        this._id = data;\n    }\n\n    /**\n     * @return {String} Artist id\n     */\n    get id() {\n        return this._id;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set images(data) {\n        this._images = data;\n    }\n\n    /**\n     * @return {String} Artist images\n     */\n    get images() {\n        return this._images;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set name(data) {\n        this._name = data;\n    }\n\n    /**\n     * @return {String} Artist name\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set popularity(data) {\n        this._popularity = data;\n    }\n\n    /**\n     * @return {String} Artist popularity\n     */\n    get popularity() {\n        return this._popularity;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set type(data) {\n        this._type = data;\n    }\n\n    /**\n     * @return {String} Entity type\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @param {Object} data Artist object\n     */\n    set uri(data) {\n        this._uri = data;\n    }\n\n    /**\n     * @return {String} Artist uri\n     */\n    get uri() {\n        return this._uri;\n    }\n\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default ArtistEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/ArtistEntity.js","'use strict';\n\nimport Album from '../helpers/Album';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more albums from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/album-endpoints/\n */\nclass AlbumHandler {\n\n  /**\n   * Get a collection of albums that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the album.\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} albumsCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=album&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a single/collection of album/s identified by its unique/list of Spotify ID.\n   *\n   * @see https://developer.spotify.com/web-api/get-album/\n   *\n   * @public\n   * @param {String|Array} ids Album id/ids to retrive\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} Album|albumsCollection\n   */\n  get(ids, query) {\n    if (Array.isArray(ids)) {\n      return Client.instance.request(`/albums/?ids=${ids}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/albums/${ids}`, 'GET', query);\n    }\n  }\n\n  /**\n   * Get a list of new album releases featured in Spotify.\n   *\n   * @see https://developer.spotify.com/web-api/get-list-new-releases/\n   *\n   * @public\n   * @required {OAuth} user-library-read\n   * @param {Object} [query] Query parameters.\n   * @returns {Promise} albumsCollection\n   */\n  newReleases(query) {\n    return Client.instance.request(`/browse/new-releases`, 'GET', query);\n  }\n\n  /**\n   * Convert a valid object to a Album entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @returns {Object} Album\n   */\n  convert(item) {\n    return new Album(item);\n  }\n\n}\n\n/**\n * Exports the AlbumHandler class.\n */\nexport default AlbumHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/AlbumHandler.js","'use strict';\n\nimport AlbumEntity from '../entities/AlbumEntity';\nimport AlbumHandler from '../handlers/AlbumHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to AlbumEntity\n */\nclass Album extends AlbumEntity {\n\n\t/**\n   * @param {Object} data Album object\n   */\n  constructor(data) {\n    super(data);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Album;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Album.js","'use strict';\n\n/**\n * Properties and methods of the Album Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#album-object-full\n */\nclass AlbumEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Album object\n   */\n  constructor(data = {}) {\n    this._album_type = data.album_type;\n    this._artists = data.artists;\n    this._available_markets = data.available_markets;\n    this._copyrights = data.copyrights;\n    this._external_ids = data.external_ids;\n    this._external_urls = data.external_urls;\n    this._genres = data.genres;\n    this._href = data.href;\n    this._id = data.id;\n    this._images = data.images;\n    this._name = data.name;\n    this._popularity = data.popularity;\n    this._release_date = data.release_date;\n    this._release_date_precision = data.release_date_precision;\n    this._tracks = data.tracks;\n    this._type = data.type;\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set album_type(data) {\n    this._album_type = data.album_type\n  }\n\n  /**\n   * @return {String} Album type\n   */\n  get album_type() {\n    return this._album_type;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set artists(data) {\n    this._artists = data.artists\n  }\n\n  /**\n   * @return {String} Album artists\n   */\n  get artists() {\n    return this._artists;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set available_markets(data) {\n    this._available_markets = data.available_markets\n  }\n\n  /**\n   * @return {String} Album available_markets\n   */\n  get available_markets() {\n    return this._available_markets;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set copyrights(data) {\n    this._copyrights = data.copyrights\n  }\n\n  /**\n   * @return {String} Album copyrights\n   */\n  get copyrights() {\n    return this._copyrights;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set external_ids(data) {\n    this._external_ids = data.external_ids\n  }\n\n  /**\n   * @return {String} Album external_ids\n   */\n  get external_ids() {\n    return this._external_ids;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set external_urls(data) {\n    this._external_urls = data.external_urls\n  }\n\n  /**\n   * @return {String} Album external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set genres(data) {\n    this._genres = data.genres\n  }\n\n  /**\n   * @return {String} Album genres\n   */\n  get genres() {\n    return this._genres;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set href(data) {\n    this._href = data.href\n  }\n\n  /**\n   * @return {String} Album href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set id(data) {\n    this._id = data.id\n  }\n\n  /**\n   * @return {String} Album id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set images(data) {\n    this._images = data.images\n  }\n\n  /**\n   * @return {String} Album images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set name(data) {\n    this._name = data.name\n  }\n\n  /**\n   * @return {String} Album name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set popularity(data) {\n    this._popularity = data.popularity\n  }\n\n  /**\n   * @return {String} Album popularity\n   */\n  get popularity() {\n    return this._popularity;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set release_date(data) {\n    this._release_date = data.release_date\n  }\n\n  /**\n   * @return {String} Album release_date\n   */\n  get release_date() {\n    return this._release_date;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set release_date_precision(data) {\n    this._release_date_precision = data.release_date_precision\n  }\n\n  /**\n   * @return {String} Album release_date_precision\n   */\n  get release_date_precision() {\n    return this._release_date_precision;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set tracks(data) {\n    this._tracks = data.tracks\n  }\n\n  /**\n   * @return {String} Album tracks\n   */\n  get tracks() {\n    return this._tracks;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set type(data) {\n    this._type = data.type\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Album object\n   */\n  set uri(data) {\n    this._uri = data.uri\n  }\n\n  /**\n   * @return {String} Album uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default AlbumEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/AlbumEntity.js","'use strict';\n\nimport Track from '../helpers/Track';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more tracks from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/track-endpoints/\n */\nclass TrackHandler {\n\n    /**\n     * Get a collection of tracks that match a keyword string.\n     *\n     * @see https://developer.spotify.com/web-api/search-item/\n     *\n     * @public\n     * @param {String} name Name of the track.\n     * @param {Object} [query] Query parameters.\n     * @return {Promise} trackCollection\n     */\n    search(name, query) {\n      return Client.instance.request(`/search?type=track&q=${encodeURIComponent(name)}`, 'GET', query);\n    }\n\n    /**\n     * Get a single/collection of track/s identified by its unique/list of Spotify ID.\n     *\n     * @see https://developer.spotify.com/web-api/get-albums-tracks/ FIXME: check the url\n     *\n     * @public\n     * @param {String|Array} ids Track id/ids to retrive\n     * @param {Object} [query] Query parameters.\n     * @return {Promise} Track|trackCollection\n     */\n    get(ids, query) {\n      if (Array.isArray(ids)) {\n        return Client.instance.request(`/tracks/?ids=${ids}`, 'GET', query);\n      } else {\n        return Client.instance.request(`/tracks/${ids}`, 'GET', query);\n      }\n    }\n\n    /**\n     * Get audio feature information for a single track identified by its unique Spotify ID\n     *\n     * @see https://developer.spotify.com/web-api/get-audio-features/\n     *\n     * @public\n     * @param {In/Arrayt} ids Track id or ids\n     * @return {Promise} Track|trackCollection\n     */\n    audioFeatures(ids) {\n      if (Array.isArray(ids)) {\n        return Client.instance.request(`/audio-features`, 'GET', {ids: ids});\n      } else {\n        return Client.instance.request(`/audio-features/${ids}`, 'GET');\n      }\n    }\n\n    /**\n     * Convert a valid object to a Track entity\n     *\n     * @public\n     * @param {Object} item Object to convert in entity\n     * @return {Object}\n     */\n    convert(item) {\n      if (item.uri) {\n        return new Track(item);\n      } else {\n        return new Track(item.track);\n      }\n    }\n\n}\n\n/**\n * Exports the TrackHandler class.\n */\nexport default TrackHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/TrackHandler.js","'use strict';\n\nimport TrackEntity from '../entities/TrackEntity';\nimport TrackHandler from '../handlers/TrackHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to TrackEntity\n */\nclass Track extends TrackEntity {\n\n  /**\n   * @param {Object} data Track object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Tracks of an Artist.\n   *\n   * @public\n   * @return {Promise}\n   */\n  get artists() {\n    return Factory(this._artists);\n  }\n\n  /**\n   * Convert duration from ms to m\n   *\n   * @public\n   * @return {String} mm:ss\n   */\n  get durationM() {\n    let x = ~~( Number( this._duration_ms ) / 1000 );\n    let seconds = x % 60;\n    seconds = `${ seconds }`.length == 1? `0${ seconds }`: seconds;\n    x = ~~( x / 60 );\n    let minutes = x % 60;\n    return `${ minutes }:${ seconds }`;\n  }\n\n  audioFeatures() {\n    return new TrackHandler().audioFeatures(this.id);\n  }\n}\n\n/**\n * Exports the Track class.\n */\nexport default Track;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Track.js","'use strict';\n\n/**\n * Properties and methods of the Track Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#track-object-full\n */\nclass TrackEntity{\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Track object\n   */\n  constructor(data = {}) {\n    this._album = data.album;\n    this._artists = data.artists;\n    this._available_markets = data.available_markets;\n    this._disc_number = data.disc_number;\n    this._duration_ms = data.duration_ms;\n    this._explicit = data.explicit;\n    this._external_ids = data.external_ids;\n    this._external_urls = data.external_urls;\n    this._href = data.href;\n    this._id = data.id;\n    // this._is_playable = data.is_playable; @relinking\n    // this._linked_from = data.linked_from; @relinking\n    this._name = data.name;\n    this._popularity = data.popularity;\n    this._preview_url = data.preview_url;\n    this._track_number = data.track_number;\n    this._type = 'track';\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set album(data) {\n    this._album = data;\n  }\n\n  /**\n   * @return {String} Track album\n   */\n  get album() {\n    return this._album;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set artists(data) {\n    this._artists = data;\n  }\n\n  /**\n   * @return {String} Track artists\n   */\n  get artists() {\n    return this._artists;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set available_markets(data) {\n    this._available_markets = data;\n  }\n\n  /**\n   * @return {String} Track available_markets\n   */\n  get available_markets() {\n    return this._available_markets;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set disc_number(data) {\n    this._disc_number = data;\n  }\n\n  /**\n   * @return {String} Track disc_number\n   */\n  get disc_number() {\n    return this._disc_number;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set duration_ms(data) {\n    this._duration_ms = data;\n  }\n\n  /**\n   * @return {String} Track duration_ms\n   */\n  get duration_ms() {\n    return this._duration_ms;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set explicit(data) {\n    this._explicit = data;\n  }\n\n  /**\n   * @return {String} Track explicit\n   */\n  get explicit() {\n    return this._explicit;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set external_ids(data) {\n    this._external_ids = data;\n  }\n\n  /**\n   * @return {String} Track external_ids\n   */\n  get external_ids() {\n    return this._external_ids;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} Track external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} Track href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set id(data) {\n    this._id = data;\n  }\n\n  /**\n   * @return {String} Track id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set is_playable(data) {\n    this._is_playable = data;\n  }\n\n  /**\n   * @return {String} Track is_playable\n   */\n  get is_playable() {\n    return this._is_playable;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set linked_from(data) {\n    this._linked_from = data;\n  }\n\n  /**\n   * @return {String} Track linked_from\n   */\n  get linked_from() {\n    return this._linked_from;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} Track name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set popularity(data) {\n    this._popularity = data;\n  }\n\n  /**\n   * @return {String} Track popularity\n   */\n  get popularity() {\n    return this._popularity;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set preview_url(data) {\n    this._preview_url = data;\n  }\n\n  /**\n   * @return {String} Track preview_url\n   */\n  get preview_url() {\n    return this._preview_url;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set track_number(data) {\n    this._track_number = data;\n  }\n\n  /**\n   * @return {String} Track track_number\n   */\n  get track_number() {\n    return this._track_number;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set type(data) {\n    this._type = data;\n  }\n\n  /**\n   * @return {String} Track type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Track object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {String} Track uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the TrackEntity class.\n */\nexport default TrackEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/TrackEntity.js","'use strict';\n\nimport Playlist from '../helpers/Playlist';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about playlists and for managing playlists.\n *\n * @see https://developer.spotify.com/web-api/playlist-endpoints/\n */\nclass PlaylistHandler {\n\n  /**\n   * Get a collection of artists that match a keyword string.\n   *\n   * @see https://developer.spotify.com/web-api/search-item/\n   *\n   * @public\n   * @param {String} name Name of the playlist.\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  search(name, query) {\n    return Client.instance.request(`/search?type=playlist&q=${encodeURIComponent(name)}`, 'GET', query);\n  }\n\n  /**\n   * Get a list of Spotify featured playlists.\n   * @see https://developer.spotify.com/web-api/get-list-featured-playlists/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  featuredPlaylists(query) {\n    return Client.instance.request(`/browse/featured-playlists`, 'GET', query);\n  }\n\n  /**\n   * Get a list of Spotify playlists tagged with a particular category.\n   * @see https://developer.spotify.com/web-api/get-categorys-playlists/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {int} id Category id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} playlistCollection\n   */\n  categoriesPlaylists(id, query) {\n    return Client.instance.request(`/browse/categories/${id}/playlists`, 'GET', query);\n  }\n\n  /**\n   * Add one or more tracks to a user’s playlist.\n   * @see https://developer.spotify.com/web-api/add-tracks-to-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {array} tracks List of uri tracks\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  addTracks(tracks, userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/tracks`,\n        'POST',\n        {uris: tracks}\n      );\n  }\n\n  /**\n   * Remove one or more tracks from a user’s playlist.\n   * @see https://developer.spotify.com/web-api/remove-tracks-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {array} tracks List of uri tracks\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  removeTracks(tracks, userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/tracks`,\n        'DELETE',\n        {uris: tracks}\n      );\n  }\n\n  /**\n   * Add a user as a follower of a playlist.\n   * @see https://developer.spotify.com/web-api/follow-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  follow(userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/followers`,\n        'PUT'\n      );\n  }\n\n  /**\n   * Remove a user as a follower of a playlist.\n   * @see https://developer.spotify.com/web-api/unfollow-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {Object} [query] Query parameters.\n   * @return {Promise} JSON response\n   */\n  unfollow(userId, playlistId, query) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists/${playlistId}/followers`,\n        'DELETE'\n      );\n  }\n\n  /**\n   * Check to see if one or more Spotify users are following a specified playlist.\n   * @see https://developer.spotify.com/web-api/check-user-following-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {Array} ids User id list\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @return {Promise} JSON response\n   */\n  contains(userId, playlistId, ids) {\n    return Client.instance.request(\n      `/users/${userId}/playlists/${playlistId}/followers/contains`,\n      'GET',\n      {ids: ids}\n    );\n  }\n\n  /**\n   * Create a playlist for a Spotify user.\n   * @see https://developer.spotify.com/web-api/create-playlist/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} name Name of the future playlist\n   * @param {Bool} is_public public or private\n   * @return {Promise} JSON response\n   */\n  create(userId, name, is_public) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists`,\n        'POST',\n        {name: name, public: is_public}\n     );\n  }\n\n  /**\n   * Change a playlist’s name and public/private state.\n   * @see https://developer.spotify.com/web-api/change-playlist-details/\n   *\n   * @public\n   * @required {OAuth}\n   * @param {String} userId User id\n   * @param {String} playlistId Playlist id\n   * @param {String} name Name of the future playlist\n   * @param {Bool} is_public public or private\n   * @return {Promise} JSON response\n   */\n  edit(userId, playlistId, name, is_public) {\n    return Client.instance\n      .request(\n        `/users/${userId}/playlists`,\n        'PUT',\n        {name: name, public: is_public}\n      );\n  }\n\n  /**\n   * Convert a valid object to a Playlist entity\n   *\n   * @public\n   * @param {Object} item Object to convert in entity\n   * @return {Object}\n   */\n  convert(item) {\n    return new Playlist(item);\n  }\n\n}\n\n/**\n * Exports the PlaylistHandler class.\n */\nexport default PlaylistHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/PlaylistHandler.js","'use strict';\n\nimport PlaylistEntity from '../entities/PlaylistEntity';\nimport PlaylistHandler from '../handlers/PlaylistHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to PlaylistEntity\n */\nclass Playlist extends PlaylistEntity {\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get a list of Tracks of a Playlist.\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get tracks() {\n    return Factory(this._tracks);\n  }\n\n  /**\n   * Add one or more Tracks to a Playlist.\n   *\n   * @public\n   * @param {Array} tracks Tracks list\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  addTrack(tracks, query) {\n    let trackList = tracks.map(track => {\n      return track.uri;\n    });\n    return new PlaylistHandler().addTracks(trackList, this.owner.id, this.id, query);\n  }\n\n  /**\n   * Remove one or more Tracks to a Playlist.\n   *\n   * @public\n   * @param {Array} tracks Tracks list\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  removeTrack(tracks, query) {\n    let trackList = tracks.map(track => {\n      return track.uri;\n    });\n    return new PlaylistHandler().removeTracks(trackList, this.owner.id, this.id, query);\n  }\n\n  /**\n   * Follow a Playlist\n   *\n   * @public\n   * @param {Object} [query] query parameters.\n   * @return {Promise}\n   */\n  follow(query) {\n    return new PlaylistHandler().follow(this.owner.id, this.id, query);\n  }\n\n  /**\n   * Unfollow a Playlist\n   *\n   * @public\n   * @param {Object} [query] Query parameters.\n   * @return {Promise}\n   */\n  unfollow(query) {\n    return new PlaylistHandler().unfollow(this.owner.id, this.id, query);\n  }\n\n  /**\n   * Verify if a user follow a playlist\n   *\n   * @public\n   * @param {Array} [ids] User ids list.\n   * @return {Promise}\n   */\n  contains(ids) {\n    return new PlaylistHandler().contains(this.owner.id, this.id, ids);\n  }\n\n  /**\n   * Edit a Playlist\n   *\n   * @public\n   * @return {Promise}\n   */\n  edit() {\n    return new PlaylistHandler().edit(this.owner.id, this.id, this.name, this.public);\n  }\n}\n\n/**\n * Exports the Playlist class.\n */\nexport default Playlist;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Playlist.js","'use strict';\n\n/**\n * Properties and methods of the Playlist Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#playlist-object-full\n */\nclass PlaylistEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Playlist object\n   */\n  constructor(data = {}) {\n    this._collaborative = data.collaborative;\n    this._description = data.description;\n    this._external_urls = data.external_urls;\n    this._followers = data.followers;\n    this._href = data.href;\n    this._id = data.id;\n    this._images = data.images;\n    this._name = data.name;\n    this._owner = data.owner;\n    this._public = data.public;\n    this._snapshot_id = data.snapshot_id;\n    this._tracks = data.tracks;\n    this._type = data.type;\n    this._uri = data.uri;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set collaborative(data) {\n    this._collaborative = data;\n  }\n\n  /**\n   * @return {String} Playlist collaborative\n   */\n  get collaborative() {\n    return this._collaborative;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set description(data) {\n    this._description = data;\n  }\n\n  /**\n   * @return {String} Playlist description\n   */\n  get description() {\n    return this._description;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} Playlist external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set followers(data) {\n    this._followers = data;\n  }\n\n  /**\n   * @return {String} Playlist followers\n   */\n  get followers() {\n    return this._followers;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} Playlist href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set id(data) {\n    this._id = data;\n  }\n\n  /**\n   * @return {Playlist} Album id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set images(data) {\n    this._images = data;\n  }\n\n  /**\n   * @return {String} Playlist images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} Playlist name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set owner(data) {\n    this._owner = data;\n  }\n\n  /**\n   * @return {String} Playlist owner\n   */\n  get owner() {\n    return this._owner;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set public(data) {\n    this._public = data;\n  }\n\n  /**\n   * @return {String} Playlist public\n   */\n  get public() {\n    return this._public;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set snapshot_id(data) {\n    this._snapshot_id = data;\n  }\n\n  /**\n   * @return {String} Playlist snapshot_id\n   */\n  get snapshot_id() {\n    return this._snapshot_id;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set tracks(data) {\n    this._tracks = data;\n  }\n\n  /**\n   * @return {String} Playlist tracks\n   */\n  get tracks() {\n    return this._tracks;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set type(data) {\n    this._type = data;\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Playlist object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {Playlist} Album uri\n   */\n  get uri() {\n    return this._uri;\n  }\n}\n\n/**\n * Exports the AlbumEntity class.\n */\nexport default PlaylistEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/PlaylistEntity.js","'use strict';\n\nimport User from '../helpers/User';\nimport Client from '../Client';\n\n/**\n * Methods for retrieving information about one or more user/s from the Spotify catalog.\n *\n * @see https://developer.spotify.com/web-api/user-profile-endpoints/\n */\nclass UserHandler {\n\n  /**\n   * Get detailed profile information about the current user.\n   *\n   * @see https://developer.spotify.com/web-api/get-current-users-profile/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} User\n   */\n  me() {\n    return Client.instance.request(`/me`);\n  }\n\n  /**\n   * Get public profile information about a Spotify user.\n   *\n   * @see https://developer.spotify.com/web-api/get-users-profile/\n   *\n   * @public\n   * @param {String} id User id to retrive\n   * @required {OAuth}\n   * @return {Promise} User\n   */\n  get(id) {\n    return Client.instance.request(`/users/${id}`);\n  }\n\n  /**\n   * Get a list of the playlists owned or followed by a Spotify user.\n   *\n   * @see https://developer.spotify.com/web-api/get-list-users-playlists/\n   *\n   * @public\n   * @param {String} id User User id\n   * @param {String} [playlistId] id to retrive playlists\n   * @param {Object} [query] Query parameters.\n   * @required {OAuth}\n   * @return {Promise} playlistCollection\n   */\n  playlists(id, playlistId, query) {\n    if (playlistId) {\n      return Client.instance.request(`/users/${id}/playlists/${playlistId}`, 'GET', query);\n    } else {\n      return Client.instance.request(`/users/${id}/playlists`, 'GET', query);\n    }\n  }\n\n  /**\n   * Check if a user follow an album, artist , track or user\n   * @see https://developer.spotify.com/web-api/check-users-saved-albums/\n   * @see https://developer.spotify.com/web-api/check-current-user-follows/\n   *\n   * @public\n   * @required {OAuth} user-follow-read scope\n   * @param {String} type artist, album or user\n   * @param {Array} ids User id list\n   * @return {Promise} JSON response\n   */\n  contains(type, ids) {\n    if (type === 'album') {\n      return Client.instance.request(\n        `/me/albums/contains`,\n        'GET',\n        {ids: ids}\n      );\n    } else if (type === 'track') {\n      return Client.instance.request(\n        `/me/tracks/contains`,\n        'GET',\n        {ids: ids}\n      );\n    } else {\n      return Client.instance.request(\n        `/me/following/contains`,\n        'GET',\n        {ids: ids, type: type}\n      );\n    }\n  }\n\n  /**\n   * Get the current user’s top artists or tracks based on calculated affinity.\n   * @see https://developer.spotify.com/web-api/get-users-top-artists-and-tracks/\n   *\n   * @public\n   * @required {OAuth} user-top-read\n   * @param {String} type artists or tracks\n   * @param {Object} query limit, offset or time_range(long_term, medium_term, short_term)\n   * @return {Promise} JSON response\n   */\n  top(type, query) {\n    return Client.instance.request(`/me/top/${type}`, 'GET', query);\n  }\n\n  /**\n   * Get the current user’s saved tracks.\n   * @see https://developer.spotify.com/web-api/get-users-saved-tracks/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} Tracks saved\n   */\n  tracks() {\n    return Client.instance.request(`/me/tracks`);\n  }\n\n  /**\n   * Get the current user’s saved albums.\n   * @see https://developer.spotify.com/web-api/get-users-saved-albums/\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise} Albums saved\n   */\n  albums() {\n    return Client.instance.request(`/me/albums`);\n  }\n\n  /**\n   * Convert a valid object to a User entity\n   *\n   * @public\n   * @param {object} item Object to convert in entity\n   * @return {Object}\n   */\n  convert(item) {\n    return new User(item);\n  }\n}\n\n/**\n * Exports the UserHandler class.\n */\nexport default UserHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/UserHandler.js","'use strict';\n\nimport UserEntity from '../entities/UserEntity';\nimport UserHandler from '../handlers/UserHandler';\nimport Factory from '../Factory';\n\n/**\n * Add helpers methods to UserEntity\n */\nclass User extends UserEntity {\n\n  /**\n   * @param {Object} data User object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get user Playlists\n   *\n   * @public\n   * @param {String} id Playlist id.\n   * @return {Promise}\n   */\n  playlists(id) {\n  \treturn new UserHandler().playlists(this.id, id);\n  }\n\n  /**\n   * Check if a user follow an album, artist or user\n   *\n   * @public\n   * @param {String} type artist, album or user\n   * @param {Array} ids User id list\n   * @return {Promise} JSON response\n   */\n  contains(type, ids) {\n    return new UserHandler().contains(type, ids);\n  }\n\n  /**\n   * Get a User’s Top Artists and Tracks\n   *\n   * @public\n   * @required {OAuth} user-top-read\n   * @param {String} type artists or tracks\n   * @param {Object} query limit, offset or time_range(long_term, medium_term, short_term)\n   * @return {Promise} JSON response\n   */\n  top(type, query) {\n    return new UserHandler().top(type, query);\n  }\n\n  /**\n   * Get user’s Saved Tracks\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise}\n   */\n  tracks() {\n    return new UserHandler().tracks();\n  }\n\n  /**\n   * Get user’s Saved Albums\n   *\n   * @public\n   * @required {OAuth}\n   * @return {Promise}\n   */\n  albums() {\n    return new UserHandler().albums();\n  }\n}\n\n/**\n * Exports the User class.\n */\nexport default User;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/User.js","'use strict';\n\n/**\n * Properties and methods of the User Entity\n *\n * @see https://developer.spotify.com/web-api/object-model/#user-object-private\n */\nclass UserEntity {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data User object\n   */\n  constructor(data = {}) {\n    this._id = data.id;\n    this._birthdate = data.birthdate;\n    this._country = data.country;\n    this._display_name = data.display_name;\n    this._email = data.email;\n    this._external_urls = data.external_urls;\n    this._followers = data.followers;\n    this._href = data.href;\n    this._images = data.images;\n    this._product = data.product;\n    this._type = 'user';\n    this._uri = data.uri;\n  }\n\n  /**\n   * @return {String} User birthdate\n   */\n  get birthdate() {\n    return this._birthdate;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set birthdate(data) {\n    this._birthdate = data;\n  }\n\n  /**\n   * @return {String} User country\n   */\n  get country() {\n    return this._country;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set country(data) {\n    this._country = data;\n  }\n\n  /**\n   * @return {String} User display_email\n   */\n  get display_email() {\n    return this._display_email;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set display_email(data) {\n    this._display_email = data;\n  }\n\n  /**\n   * @return {String} User name\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set name(data) {\n    this._name = data;\n  }\n\n  /**\n   * @return {String} User external_urls\n   */\n  get external_urls() {\n    return this._external_urls;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set external_urls(data) {\n    this._external_urls = data;\n  }\n\n  /**\n   * @return {String} User followers\n   */\n  get followers() {\n    return this._followers;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set followers(data) {\n    this._followers = data;\n  }\n\n  /**\n   * @return {String} User href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set href(data) {\n    this._href = data;\n  }\n\n  /**\n   * @return {String} User images\n   */\n  get images() {\n    return this._images;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set images(data) {\n    this._images = data;\n  }\n\n  /**\n   * @return {String} User product\n   */\n  get product() {\n    return this._product;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set product(data) {\n    this._product = data;\n  }\n\n  /**\n   * @return {String} Entity type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @return {String} User uri\n   */\n  get uri() {\n    return this._uri;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set uri(data) {\n    this._uri = data;\n  }\n\n  /**\n   * @return {User} Track id\n   */\n  get id() {\n    return this._id;\n  }\n\n  /**\n   * @param {Object} data User object\n   */\n  set id(data) {\n    this._id = data;\n  }\n}\n\n/**\n * Exports the UserEntity class.\n */\nexport default UserEntity;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/UserEntity.js","\"user strict\";\nimport Collection from '../helpers/Collection';\n\n/**\n * Collection constructor\n */\nclass CollectionHandler {\n\n\t/**\n   * Constructor\n   *\n   * @public\n   * @param {Array} items Entity list\n   * @param {Object} handler Entity handler\n   * @param {Object} source Original response\n   * @return {Array} Collection\n   */\n\tconstructor(items, handler, source) {\n    let collectionHelper = new Collection(source);\n    let collection = Object.assign(new Array, collectionHelper);\n    // Super mega hack\n    collection.next = () => collectionHelper.next;\n    collection.previous = () => collectionHelper.previous;\n    collection.last = collectionHelper.last;\n    collection.first = collectionHelper.first;\n    collection.index = collectionHelper.index;\n\n\t\titems.map((item) => {\n\t\t\treturn collection.push(new handler().convert(item));\n\t\t});\n\n\t\tif (collection.length) {\n\t\t\tcollection.type = collection[0].type;\n\t\t}\n\n\t\t// collection.source = source; FIXME: review this\n\t\treturn collection;\n\t}\n\n}\n\n/**\n * Exports the CollectionHandler class.\n */\nexport default CollectionHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/handlers/CollectionHandler.js","'use strict';\n\nimport CollectionEntity from '../entities/CollectionEntity';\nimport Factory from '../Factory';\n\n\n/**\n * Add helpers methods to CollectionEntity\n */\nclass Collection extends CollectionEntity {\n\n  /**\n   * @param {Object} data Collection object\n   */\n  constructor(data) {\n    super(data);\n  }\n\n  /**\n   * Get the next page of the Collection\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get next() {\n    return Factory({href: this._next});\n  }\n\n  /**\n   * Get the prev page of the Collection\n   *\n   * @public\n   * @override\n   * @return {Promise}\n   */\n  get previous() {\n    return Factory({href: this._next});\n  }\n\n  /**\n   * Get the first Entity of the Collection\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  first() {\n    return this[0];\n  }\n\n  /**\n   * Get the last Entity of the Collection\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  last() {\n    return this[this.length-1];\n  }\n\n  /**\n   * Get a Entity based of a index\n   *\n   * @public\n   * @override\n   * @return {Object} Entity\n   */\n  index(id) {\n    return this[id];\n  }\n}\n\n/**\n * Exports the Collection class.\n */\nexport default Collection\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/helpers/Collection.js","'use strict';\n\n/**\n * Properties and methods of the Collection Entity\n */\nclass Collection {\n\n  /**\n   * Constructor\n   *\n   * @param {Object} data Api object\n   */\n  constructor(data = {}) {\n    this._href = data.href;\n    this._limit = data.limit;\n    this._next = data.next;\n    this._offset = data.offset;\n    this._previous = data.previous;\n    this._total = data.total;\n  }\n\n  /**\n   * @param {Object} data Api response type\n   */\n  set type(data) {\n    this._type = `${data}Collection`;\n  }\n\n  /**\n   * @return {String} Collection type\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @param {Object} data Api response href\n   */\n  set href(data) {\n    this._href = data.href;\n  }\n\n  /**\n   * @return {String} Collection href\n   */\n  get href() {\n    return this._href;\n  }\n\n  /**\n   * @param {Object} data Api response limit\n   */\n  set limit(data) {\n    this._limit = data.limit;\n  }\n\n  /**\n   * @return {String} Collection limit\n   */\n  get limit() {\n    return this._limit;\n  }\n\n  /**\n   * @param {Object} data Api response next\n   */\n  set next(data) {\n    this._next = data.next;\n  }\n\n  /**\n   * @return {String} Collection next\n   */\n  get next() {\n    return this._next;\n  }\n\n  /**\n   * @param {Object} data Api response offset\n   */\n  set offset(data) {\n    this._offset = data.offset\n  }\n\n  /**\n   * @return {String} Collection offset\n   */\n  get offset() {\n    return this._offset;\n  }\n\n  /**\n   * @param {Object} data Api response previous\n   */\n  set previous(data) {\n    this._previous = data.previous;\n  }\n\n  /**\n   * @return {String} Collection previous\n   */\n  get previous() {\n    return this._previous;\n  }\n\n  /**\n   * @param {Object} data Api response total\n   */\n  set total(data) {\n    this._total = data.total;\n  }\n\n  /**\n   * @return {String} Collection total\n   */\n  get total() {\n    return this._total;\n  }\n\n}\n\n/**\n * Exports the Collection class.\n */\nexport default Collection;\n\n\n\n// WEBPACK FOOTER //\n// ./public/src/entities/CollectionEntity.js"],"sourceRoot":""}